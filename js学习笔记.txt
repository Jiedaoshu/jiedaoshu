js学习笔记
JS学习：
 
js概述：
是一种运行与js解释器/引擎中的解释型脚本语言。
 
运行环境：
 
独立安装的js解释器：nodejs
引擎：浏览器。
 
js组成：
核心：Ecmascript；
dom：文档对象模型；
（browser）bom：浏览器对象模型；
特点：
开发工具简单；
无需编译；
弱类型语言，无需声明；
面向对象；
 
浏览器内核的作用：
负责页面内容的渲染：
html、css、+js。
 
浏览器引擎，可直接在浏览器源码查看器中的console中直接输入js脚本进行运行。
 
将js脚本嵌入到html中。
 
1.将js代码嵌入在元素中；如button onclick=“function”
2.将脚本嵌入在<script>标记中，<script></script>，允许出现在html的任意位置处。
3.将js代码写在外部脚本文件中（**.js）
引用，
head标签中<script src=""></script>。
注意：
若已经引用外部js文件，则不允许在html内部嵌入js代码。
 
基础语法：
 
语句：
以；结束；大小写敏感；英文标点注意。
注释：
单行注视：//
多行注释/*   */
 
变量：
就是内存中的一段存储空间。
变量名：内存空间的别名，可以自定义；
变量值：保存在内存空间中的数据；
 
变量声明：
用“var”关键字；
注意：
声明过程中，尽量不要省略var关键字，否则声明的是“全局变量”。
 
示例：
var studentName=25；
 
一次性声明多个变量并赋值


变量名命名规范：
1.不允许使用关键字；
2.由字母、数字、$组成；
3.不能以数字开头；
4.尽量见民知意；
5.采用驼峰命名规则；

变量的使用：
1.输出内容


2.对变量进行存取操作：


注意：



数据类型：
￼数据类型：
原始类型（基本类型）
1.数字（number）类型：
整数、浮点数
2.字符串（string）类型


3.布尔（boolean）类型。
4.空（null）：声明对象未赋值；
5.undefined：1.声明对象未赋值；访问对象不存在的属性时会输出；

数据类型转换：
会将数字自动转换为字符串，（所有的数据类型与string做+运算时，最后的结果都为string）
例如：
var=13+16；输出29；
var="13"+16;输出1316（有无空格？无空格）；

隐式转换


犹如大自然中的水，高温融化，低温结冰；



转换行数—显示转换（强制转换）
1.toString（）


2.parseInt（）



3.parseFloat（）
4.Number（）



运算符与表达式：
运算符：+-*/（%，取余操作，取两个数字的余数；示例 var i=10%3；i=1，主要用于判断数字的奇偶性以及获取数字的最后几位，示例 var 1567%10=7，var 1567%100=67）
表达式：运算符和操作数所组成的式子，叫做表达式；每个表达式都有自己的值。

自增自减（++ --）：
j=i++（在使用后进行自增操作，可以理解为 j=i，i=i++）
j=++i（在使用前进行自增操作，可以理解为i=i++，j=i）


关系运算符：



示例：



逻辑预算符：
关联条件
不同条件之间的关联：
与：&&
或：||
非：！

短路与：


短路非：



条件预算符
三目运算符：
表达式1？表达式2:表达式3；


三目运算符的嵌套：



错题集：
    var a=1;
    function sum(b){
    console.log(a);
    a+=2;
    }
    var testValue1=sum(a);
    var testValue2=console.log(a);
    document.write(testValue1);
    document.write(testValue2);
输出结果1 3













